trigger:
- main

pool:
  vmImage: 'windows-latest' # Or any suitable agent pool

steps:
- task: PowerShell@2
  displayName: 'Print Release Pipeline Info'
  inputs:
    targetType: 'inline'
    script: |
      # Requires the SYSTEM_ACCESSTOKEN environment variable to be available in the pipeline.
      # Ensure 'Allow scripts to access the OAuth token' is enabled in your agent job settings.

      # Organization Name
      $organizationName = ($env:SYSTEM_COLLECTIONURI -split '/')[-2]
      Write-Host "Organization Name: $($organizationName)"

      # Project Name
      $projectName = $env:SYSTEM_TEAMPROJECT
      Write-Host "Project Name: $($projectName)"

      # Release Number
      if ($env:RELEASE_RELEASENUMBER) {
          $releaseNumber = $env:RELEASE_RELEASENUMBER
          Write-Host "Release Number: $($releaseNumber)"
      } else {
          Write-Warning "Release Number environment variable (RELEASE_RELEASENUMBER) not found."
          $releaseNumber = "N/A"
      }

      # Variables declared in the pipeline (Example - replace with your actual variable name)
      $yourDeclaredVariable = $env:YOUR_VARIABLE_NAME
      if ($yourDeclaredVariable -ne $null) {
          Write-Host "Your Declared Variable (YOUR_VARIABLE_NAME): $($yourDeclaredVariable)"
      } else {
          Write-Warning "Your declared variable (YOUR_VARIABLE_NAME) not found."
      }

      # --- Optional: If you need more detailed information about the *current* release pipeline ---
      # You would typically use the Azure DevOps REST API for this.
      # The following is a basic example to get the definition name.

      # $uri = "$env:SYSTEM_COLLECTIONURI$env:SYSTEM_TEAMPROJECT/_apis/release/definitions/$($env:RELEASE_DEFINITIONID)?api-version=7.1-preview.1"
      # $headers = @{
      #     Authorization = "Bearer $env:SYSTEM_ACCESSTOKEN"
      # }

      # try {
      #     $releaseDefinition = Invoke-RestMethod -Uri $uri -Headers $headers -Method Get
      #     Write-Host "Release Pipeline Name: $($releaseDefinition.name)"
      # } catch {
      #     Write-Warning "Could not retrieve Release Pipeline Name: $_"
      # }